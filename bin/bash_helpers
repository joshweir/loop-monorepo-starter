BASE_PKG=`jq -r .name $LOOP_PATH/package.json`

function loop {
  : "${BASE_PKG:?Could not determine base backage name}"

  if [ -z "$BASE_PKG" ]; then
    echo Could not determine base backage name
    return -1;
  fi

  if [ "$BASE_PKG" = "null" ]; then
    echo Could not determine base backage name
    return -1;
  fi

  lernaVer=`lerna -v`
  npmVer=`npm -v`
  nodeVer=`node -v`

  if [[ $lernaVer == 3* ]]
  then
    echo global lerna version $lernaVer
  else
    echo bad global lerna version. Should be 3.x.x got $lernaVer
    return -1
  fi

  if [[ $npmVer == 6* ]]
  then
    echo npm version $npmVer
  else
    echo bad npm version. Should be 6.x.x got $npmVer
    return -1
  fi

  if [[ $nodeVer == v10* ]]
  then
    echo node version $nodeVer
  else
    echo bad node version. Should be v8.x.x got $nodeVer
    return -1
  fi

  case "$1" in
    buildmodule | bm | b)
      lerna run buildmod --stream --scope ${BASE_PKG} -- --mod=$2;
      ;;
    buildall | ba)
      lerna run build --stream --scope ${BASE_PKG};
      ;;
    startdev | sd | d)
      lerna run startdev --stream --scope $2;
      ;;
    bootstrap | bo)
      lerna bootstrap && lerna run remove-git-in-npm-modules --stream --scope ${BASE_PKG} && lerna run update-refs --stream --scope ${BASE_PKG};
      ;;
    lint | lt | l)
      lerna run lint --stream --scope ${BASE_PKG}
      ;;
    prettier | pt | p)
      lerna run prettier --stream --scope ${BASE_PKG}
      ;;
    test | tt | t)
      lerna run test --stream --scope ${BASE_PKG}
      ;;
    testwatch | tw)
      lerna run test:watch --stream --scope ${BASE_PKG}
      ;;
    init | in | i)
      lerna run init --stream --scope ${BASE_PKG}
      ;;
    watch | w)
      lerna run watch --stream --scope ${BASE_PKG}
      ;;
    updaterefs | ur)
      lerna run update-refs --stream --scope ${BASE_PKG}
      ;;
    depcheck)
      lerna exec --ignore 'PDN-FIXME-{monorepo,webapp}' --stream --parallel --no-bail -- depcheck --ignores @types/*,PDN-FIXME-lambda-shared,PDN-FIXME-graphql-schema,PDN-FIXME-types --skip-missing=true
      ;;
    *)
      echo $"Usage: $0 {bm <module>|bootstrap|buildall|buildquick|test|testwatch|lint|prettier|init|startdev|startux|watch|updaterefs}"
      return -1
  esac
}

export -f loop